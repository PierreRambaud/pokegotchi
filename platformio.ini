[env]
build_flags =
  -D LV_CONF_INCLUDE_SIMPLE
  -D LV_LVGL_H_INCLUDE_SIMPLE=1
  -D POKEGOTCHI_DEFAULT_LOCALE="\"en\""
lib_deps =
  lv_i18n
  Pokegotchi
  lvgl=git+https://github.com/lvgl/lvgl.git#v9.0.0
  ArduinoJon=git+https://github.com/bblanchon/ArduinoJson#v7.0.2
check_tool = cppcheck
check_skip_packages = yes

[env:m5stack-core2]
board = m5stack-core2
platform = espressif32
extra_scripts = ./support/littlefsbuilder.py

framework = arduino

upload_port = /dev/ttyACM0
upload_speed = 921600

monitor_filters = direct, esp32_exception_decoder
monitor_speed = 115200
monitor_port = /dev/ttyACM0

board_build.filesystem = littlefs

lib_deps =
  ${env.lib_deps}
  M5Core2=https://github.com/m5stack/M5Core2/archive/refs/tags/0.1.7.zip

build_flags =
  ${env.build_flags}
  ; Add recursive dirs for hal headers search
  !python -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/m5stack-core2')]))"
  -D POKEGOTCHI_INCLUDE_GAMES
  -D BOARD_HAS_PSRAM
  -D LV_DRV_NO_CONF
  -mfix-esp32-psram-cache-issue

build_src_filter =
  +<*>
  +<../hal/m5stack-core2>

[env:emulator_64bits]
platform = native@^1.1.3
extra_scripts = support/sdl2_build_extra.py

build_flags =
  ${env.build_flags}
  ; Add recursive dirs for hal headers search
  !python -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/sdl2')]))"
  -lSDL2
  ; SDL drivers options
  -D LV_LVGL_H_INCLUDE_SIMPLE
  -D LV_DRV_NO_CONF
  -D USE_SDL
  -D LV_USE_SDL
  -D SDL_INCLUDE_PATH="\"SDL2/SDL.h\""

build_src_filter =
  +<*>
  +<../hal/sdl2>
